{"version":3,"sources":["Components/TodoItem.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","removeTodo","index","className","Button","onClick","variant","color","ToDoForm","addTodo","refInput","useRef","Grid","container","justify","Input","type","inputRef","current","value","App","useState","setTodo","list","splice","item","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAmBeA,G,MAfE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,WAAuB,EAAXC,MACpC,OACE,sBAAKC,UAAU,OAAf,UACGH,EACD,cAACI,EAAA,EAAD,CACEC,QAASJ,EACTK,QAAQ,YACRC,MAAM,YAHR,yB,gBCsBSC,EA1BE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACZC,EAAWC,iBAAO,MASxB,OACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,eAACF,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,CACEC,KAAK,OACLb,UAAU,QACVc,SAAUP,IAEZ,cAACN,EAAA,EAAD,CAAQE,QAAQ,YAAYC,MAAM,UAAUF,QAf7B,WAAO,IAClBa,EAAYR,EAAZQ,QACHA,EAAQC,QACbV,EAAQS,EAAQC,OAChBD,EAAQC,MAAQ,KAWZ,4BCaOC,EA7BH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTrB,EADS,KACHsB,EADG,KAQVrB,EAAa,SAACC,GAClB,IAAMqB,EAAI,YAAOvB,GACjBuB,EAAKC,OAAOtB,EAAO,GACnBoB,EAAQC,IAGV,OACE,sBAAKpB,UAAU,MAAf,UACE,0CACA,cAACS,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,sBAAKX,UAAU,YAAf,UACE,cAAC,EAAD,CAAUM,QAhBF,SAACgB,GACf,IAAMF,EAAI,sBAAOvB,GAAP,CAAayB,IACvBH,EAAQC,MAeDvB,EAAK0B,KAAI,SAAC1B,EAAME,GACf,OAAO,cAAC,EAAD,CAAUA,MAAOA,EAAOF,KAAMA,EAAkBC,WAAYA,GAAnBC,eCf7CyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06fd47a2.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\nimport React from 'react';\nimport './TodoList.css';\n\nconst TodoItem = ({ todo, removeTodo, index}) => {\n  return (\n    <div className=\"todo\">\n      {todo}\n      <Button\n        onClick={removeTodo}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nexport default TodoItem;","import { Button, Grid, Input } from '@material-ui/core';\nimport React, { useRef } from 'react';\n\n\nconst ToDoForm = ({ addTodo }) => {\n  const refInput = useRef(null);\n\n  const handleSubmit = () => {\n    const { current } = refInput;\n    if (!current.value) return;\n    addTodo(current.value);\n    current.value = '';\n  };\n\n  return (\n    <Grid container justify='center'>\n      <Grid>\n        <Input\n          type=\"text\"\n          className=\"input\"\n          inputRef={refInput}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Add item\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ToDoForm;","import './App.css';\nimport TodoItem from './Components/TodoItem';\nimport ToDoForm from './Components/TodoForm';\nimport { useState } from 'react';\nimport { Grid } from '@material-ui/core';\n\nconst App = () => {\n  const [todo, setTodo] = useState([]);\n\n  const addTodo = (item) => {\n    const list = [...todo, item];\n    setTodo(list);\n  };\n\n  const removeTodo = (index) => {\n    const list = [...todo];\n    list.splice(index, 1);\n    setTodo(list);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo app</h1>\n      <Grid container justify='center'>\n        <div className=\"todo-list\">\n          <ToDoForm addTodo={addTodo} />\n          {todo.map((todo, index) => {\n            return <TodoItem index={index} todo={todo} key={index} removeTodo={removeTodo} />\n          })}\n        </div>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}